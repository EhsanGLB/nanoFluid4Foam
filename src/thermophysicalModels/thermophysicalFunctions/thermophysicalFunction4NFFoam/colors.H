/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | foam-extend: Open Source CFD
   \\    /   O peration     | Version:     4.1
    \\  /    A nd           | Web:         http://www.foam-extend.org
     \\/     M anipulation  | For copyright notice see file Copyright
-------------------------------------------------------------------------------
License
    This file is part of foam-extend.

    foam-extend is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by the
    Free Software Foundation, either version 3 of the License, or (at your
    option) any later version.

    foam-extend is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with foam-extend.  If not, see <http://www.gnu.org/licenses/>.

Description
    different color name to print

Author
    Ehsan Golab, SUT. All rights reserved.

\*---------------------------------------------------------------------------*/

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

    const std::string reset("\033[0m");
    const std::string red("\033[0;31m");
    const std::string boldRed("\033[1m\033[31m");
    const std::string green("\033[0;32m");
    const std::string boldGreen("\033[1m\033[32m");
    const std::string yellow("\033[0;33m");
    const std::string boldYellow("\033[1m\033[33m");
    const std::string blue("\033[0;34m");
    const std::string boldBlue("\033[1m\033[34m");
    const std::string magenta("\033[0;35m");
    const std::string boldMagenta("\033[1m\033[35m");
    const std::string cyan("\033[0;36m");
    const std::string boldCyan("\033[1m\033[36m");
    const std::string white("\033[0;37m");
    const std::string boldWhite("\033[1m\033[37m");

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// ************************************************************************* //
