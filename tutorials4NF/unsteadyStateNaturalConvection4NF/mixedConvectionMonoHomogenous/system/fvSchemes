/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.1                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         			Euler;
}

gradSchemes
{
    default         			Gauss linear;
}

divSchemes
{
    default         			none;
    div(phi,U)      			Gauss upwind;
    div(phi,T)      			Gauss upwind;
    div(phi,k)      			Gauss upwind;
    div(phi,epsilon) 			Gauss upwind;
    div(phi,R)      			Gauss upwind;
    div(R)          			Gauss linear;
    div((nuEff*dev(grad(U).T())))	Gauss linear;//-nanoFluid4Foam
    div((phi*interpolate((rho*Cp))),T)	Gauss upwind;//-nanoFluid4Foam
    div(phi,alphai)			Gauss upwind;//-nanoFluid4Foam
}

laplacianSchemes
{
    default         			Gauss linear corrected;
    laplacian(nuEff,U) 			Gauss linear corrected;
    laplacian((1|A(U)),p) 		Gauss linear corrected;
    laplacian(kappaEff,T) 		Gauss linear corrected;
    laplacian(DkEff,k) 			Gauss linear corrected;
    laplacian(DepsilonEff,epsilon) 	Gauss linear corrected;
    laplacian(DREff,R) 			Gauss linear corrected;
}

interpolationSchemes
{
    default         			linear;
}

snGradSchemes
{
    default         			corrected;
}


// ************************************************************************* //
