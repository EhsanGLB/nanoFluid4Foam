/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.1                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1.0;

nx  40;
ny  40;

vertices
(
    //-back
    //-circle
    (0.176776695 0.176776695 -0.1)//0
    (-0.176776695 0.176776695 -0.1)//1
    (-0.176776695 -0.176776695 -0.1)//2
    (0.176776695 -0.176776695 -0.1)//3
    //-square
    (0.5 0.5 -0.1)//4
    (-0.5 0.5 -0.1)//5
    (-0.5 -0.5 -0.1)//6
    (0.5 -0.5 -0.1)//7

    //-front
    //-circle
    (0.176776695 0.176776695 0.1)//8
    (-0.176776695 0.176776695 0.1)//9
    (-0.176776695 -0.176776695 0.1)//10
    (0.176776695 -0.176776695 0.1)//11
    //-square
    (0.5 0.5 0.1)//12
    (-0.5 0.5 0.1)//13
    (-0.5 -0.5 0.1)//14
    (0.5 -0.5 0.1)//15
);

edges
(
    //-circle
    //-back
    arc 0 1 (0 0.25 -0.1)
    arc 1 2 (-0.25 0 -0.1)
    arc 2 3 (0 -0.25 -0.1)
    arc 3 0 (0.25 0 -0.1)
    //-front
    arc 8 9 (0 0.25 0.1)
    arc 9 10 (-0.25 0 0.1)
    arc 10 11 (0 -0.25 0.1)
    arc 11 8 (0.25 0 0.1)
);

blocks
(
    hex (0 4 5 1 8 12 13 9) ($nx $ny 1) simpleGrading (1 1 1)//0
    hex (1 5 6 2 9 13 14 10) ($nx $ny 1) simpleGrading (1 1 1)//1
    hex (2 6 7 3 10 14 15 11) ($nx $ny 1) simpleGrading (1 1 1)//2
    hex (3 7 4 0 11 15 12 8) ($nx $ny 1) simpleGrading (1 1 1)//3
);

boundary
(
    circle
    {
        type wall;
        faces
        (
            (1 0 8 9)
            (2 1 9 10)
            (3 2 10 11)
            (0 3 11 8)
        );
    }

    square
    {
        type wall;
        faces
        (
            (4 5 13 12)
            (5 6 14 13)
            (6 7 15 14)
            (7 4 12 15)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (0 4 5 1)
            (8 12 13 9)
            (1 5 6 2)
            (9 13 14 10)
            (2 6 7 3)
            (10 14 15 11)
            (3 7 4 0)
            (11 15 12 8)
        );
    }

);

mergePatchPairs
(
);


// ************************************************************************* //
